<script setup lang="ts">
import { ref } from 'vue';
import { ConfigureMachinesStepItem } from '.'
import Step from '../../Step.vue';
import { Machine } from '@/support';
import { TypedSchema } from 'vee-validate';
import { FieldArray } from 'vee-validate';
const emit = defineEmits(['next']);
interface Props {
    selectedMachines: Machine[],
    formSchema: TypedSchema,
    setFieldValue: (field: any, value: any) => void
}

const props = defineProps<Props>();

const showButton = ref(true);

const builderText = ref({
    heading: 'Now pick time for each machine',
    text: '<p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Ab reiciendis aliquid enim voluptatum molestias maxime voluptate, quae repellat quidem laboriosam eveniet aut perspiciatis odio minus dolorum voluptatem error, deleniti ducimus!</p>'
});

const clickHandle = () => {
    emit('next');
    showButton.value = false;
}
</script>

<template>
    asdasd
    <Step :builderText="builderText">
        <div class="grid grid-cols-2 md:grid-cols-3 grid-auto-columns-1/2 md:grid-auto-columns-1/3 gap-4">
            <FieldArray name="machinesInPlan">
                <ConfigureMachinesStepItem v-for="(machine, index) in selectedMachines" :key="index" :machine="machine"
                    :index="index" :formSchema="formSchema" :setFieldValue="Form.setFieldValue" />
            </FieldArray>
        </div>
    </Step>
</template>

<style lang="scss"></style>
